# 파일: appspec.yml (최종본)
# 각 스크립트가 어떤 사용자로 실행되는지(runas)가 가장 중요!!

version: 0.0
os: linux

files:
  - source: app.jar
    destination: /home/ubuntu/app

hooks:
  BeforeInstall:
    - location: scripts/before_install.sh
      timeout: 300
      runas: root # ★★★ root 권한으로 실행되어야 함.

  AfterInstall:
    - location: scripts/after_install.sh
      timeout: 300
      runas: root # ★★★ root 권한으로 실행되어야 함.

  ApplicationStart:
    - location: scripts/application_start.sh
      timeout: 300
      runas: ubuntu # ★★★ ubuntu 사용자로 실행되어야 함.

# 파일: deploy/scripts/before_install.sh (최종본)
# 이 스크립트는 root 권한으로 실행되어 JDK 설치와 디렉토리 생성만 담당함.

#!/bin/bash
echo "[BeforeInstall] 시작: JDK 설치 및 디렉토리 준비"

# Java 17 (JDK) 설치 (없는 경우에만)
  if ! command -v java &> /dev/null || ! java -version 2>&1 | grep -q "17"; then
  echo "Java 17이 설치되어 있지 않습니다. 설치를 시작합니다."
  apt-get update -y
  apt-get install -y openjdk-17-jdk
  else
  echo "Java 17이 이미 설치되어 있습니다."
  fi
  
  # 배포 디렉토리 생성
  APP_DIR="/home/ubuntu/app"
  echo "배포 디렉토리($APP_DIR)를 준비합니다."
  if [ ! -d "$APP_DIR" ]; then
  mkdir -p "$APP_DIR"
  fi
  ```bash
  # 파일: deploy/scripts/after_install.sh (최종본)
  # 이 스크립트는 root 권한으로 실행되어, 방금 복사된 파일들의 소유권을 ubuntu에게 넘겨줌
  
  #!/bin/bash
  echo "[AfterInstall] 배포된 파일들의 권한을 설정합니다."
  
  APP_DIR="/home/ubuntu/app"
  
  # /home/ubuntu/app 디렉토리와 그 안의 모든 파일/디렉토리의 소유자를 ubuntu로 변경
  # 이 작업이 성공하면, 다음 단계에서 ubuntu 사용자가 모든 작업을 할 수 있게 됩니다.
  echo "디렉토리($APP_DIR)의 소유자를 ubuntu로 변경합니다."
  chown -R ubuntu:ubuntu "$APP_DIR"
  
  # app.jar 파일에 실행 권한을 부여합니다.
  echo "JAR 파일에 실행 권한을 부여합니다."
  chmod +x "$APP_DIR/app.jar"
  ```bash
  # 파일: deploy/scripts/application_start.sh (이전 버전과 동일)
  # ubuntu 사용자로 실행되며, 이제 모든 권한을 가지고 앱을 실행!
  
  #!/bin/bash
  echo "[ApplicationStart] Spring Boot 앱 실행"
  
  APP_DIR="/home/ubuntu/app"
  APP_JAR="$APP_DIR/app.jar"
  LOG_FILE="$APP_DIR/app.log"
  PID_FILE="$APP_DIR/app.pid"
  
  # 기존에 실행 중인 애플리케이션이 있다면 종료
  if [ -f "$PID_FILE" ]; then
  PID=$(cat "$PID_FILE")
  if ps -p $PID > /dev/null; then
echo "기존 프로세스 종료: $PID"
  kill -9 $PID
  fi
  rm -f "$PID_FILE"
  fi
  
  # JAR 파일이 존재하는지 확인
  if [ ! -f "$APP_JAR" ]; then
echo "오류: ApplicationStart 단계에서 $APP_JAR 파일을 찾을 수 없음."
  exit 1
  fi
  
  # nohup으로 백그라운드에서 애플리케이션 실행
  echo "Spring Boot 애플리케이션 실행..."
  nohup java -jar "$APP_JAR" > "$LOG_FILE" 2>&1 &
  
  # 실행된 프로세스의 ID(PID)를 파일에 저장
  echo $! > "$PID_FILE"
  
  echo "애플리케이션이 시작. 로그는 $LOG_FILE 에서 확인."

