# 파일: appspec.yml (수정된 최종본)
# 'AfterInstall' 훅의 실행 사용자(runas)를 root로 변경하는 것이 핵심입니다.

version: 0.0
os: linux

files:
  - source: app.jar
    destination: /home/ubuntu/app

hooks:
  BeforeInstall:
    - location: scripts/before_install.sh
      timeout: 300
      runas: root # 이 스크립트는 root 권한으로 실행

  AfterInstall:
    - location: scripts/after_install.sh
      timeout: 300
      runas: root # ★★★ 이 부분을 root로 변경하는 것이 가장 중요합니다 ★★★

  ApplicationStart:
    - location: scripts/application_start.sh
      timeout: 300
      runas: ubuntu # 이 스크립트는 최종적으로 ubuntu 사용자로 실행
  ```bash
# 파일: deploy/scripts/before_install.sh (수정된 최종본)
# 이제 이 스크립트는 디렉토리 생성과 JDK 설치만 담당합니다.

#!/bin/bash
echo "[BeforeInstall] 시작: JDK 설치 및 디렉토리 준비"

# Java 17 (JDK) 설치 (없는 경우에만)
  if ! command -v java &> /dev/null || ! java -version 2>&1 | grep -q "17"; then
  echo "Java 17이 설치되어 있지 않습니다. 설치를 시작합니다."
  apt-get update -y
  apt-get install -y openjdk-17-jdk
  else
  echo "Java 17이 이미 설치되어 있습니다."
  fi
  
  # 배포 디렉토리 생성
  APP_DIR="/home/ubuntu/app"
  echo "배포 디렉토리($APP_DIR)를 준비합니다."
  if [ ! -d "$APP_DIR" ]; then
  mkdir -p "$APP_DIR"
  fi
  ```bash
  # 파일: deploy/scripts/after_install.sh (수정된 최종본)
  # 파일 복사 후, root 권한으로 파일들의 소유권을 ubuntu에게 넘겨줍니다.
  
  #!/bin/bash
  echo "[AfterInstall] 배포된 파일들의 권한을 설정합니다."
  
  APP_DIR="/home/ubuntu/app"
  
  # /home/ubuntu/app 디렉토리와 그 안의 모든 파일/디렉토리의 소유자를 ubuntu로 변경합니다.
  echo "디렉토리($APP_DIR)의 소유자를 ubuntu로 변경합니다."
  chown -R ubuntu:ubuntu "$APP_DIR"
  
  # app.jar 파일에 실행 권한을 부여합니다.
  echo "JAR 파일에 실행 권한을 부여합니다."
  chmod +x "$APP_DIR/app.jar"
